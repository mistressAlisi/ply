from django.http import Http404

# PLY
from ply.toolkit import vhosts
from stream.models import Stream,StreamMessage
from community.models import Community
from profile.models import Profile
# Basic functions to support PLY requests:

# Find a community associated to the current request's URL and VHost, or redirect to "no Vhost found": Returns Community Object.
def post_to_active_profile(request,content_type,contents_text,contents_json):
    """
    @brief Post a message to the active ROOT STREAM profile of the profile and community in request session space.
    :param request: p_request:Django Request
    :type request: t_request:mixed
    :param content_type: p_content_type:Content Type, default: "text/plain"
    :type content_type: t_content_type:mixed
    :param contents_text: p_contents_text:Text Contents
    :type contents_text: t_contents_text:mixed
    :param contents_json: p_contents_json:JSON Contents
    :type contents_json: t_contents_json:mixed
    :returns: r:Message UUID
    """
    community = Community.filter(uuid=request.session['community'])
    profile = Profile.filter(uuid=request.session['profile'])
    stream = Stream.objects.get(community=community,profile=profile,root_stream=True,type="PROFILE")
    stream.nodes += 1
    stream.save()
    msg_text = request.POST["contents_text"]
    msg_type = request.POST["type"]
    message = StreamMessage(stream=stream,author=profile,type=content_type,contents_text=contents_text,contents_json=contents_json)
    message.save()
    return message.uuid()
