# Generated by Django 3.1.3 on 2022-05-08 20:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0001_initial'),
        ('registration', '0009_auto_20220405_1823'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('area', models.CharField(choices=[('D', 'Standard (Day) Dealers Den'), ('N', '18+ (Night) Dealers Den')], default='D', max_length=1)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('address1', models.CharField(max_length=100, verbose_name='Address Line 1')),
                ('address2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=40)),
                ('state', models.CharField(max_length=25)),
                ('postal_code', models.CharField(help_text='The address above should be the address for your business.', max_length=10)),
                ('phone', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('emails_ok', models.BooleanField(default=True, help_text='Can we send you e-mail outside of the reminder and approval status e-mails?')),
                ('survey_ok', models.BooleanField(default=True, help_text='Will you participate in our survey after con?')),
                ('birthdate', models.DateField()),
                ('dealer_slug', models.CharField(blank=True, max_length=100, null=True)),
                ('reg_codes', models.TextField(blank=True, null=True)),
                ('registration_lookup', models.CharField(blank=True, max_length=150, null=True)),
                ('business_name', models.CharField(help_text='Enter your business name as it appears on your Tax License, or as it will appear on your tax license', max_length=250)),
                ('license', models.CharField(blank=True, help_text="Enter just your license number as it appears on your Tax License. If you don't have a tax license, put 'None'", max_length=100, null=True, verbose_name='License Number')),
                ('type_of_wares', models.CharField(choices=[('dig', 'Digital Art (prints, comics, badges, etc)'), ('tra', 'Traditional Art (pencils and markets, paintings, etc)'), ('fur', 'Fursuit Maker, Accessories, and Prefabs'), ('fug', 'Fursuit Suiting Supplies & Accessories'), ('mus', 'Music or Audio'), ('bok', 'Books / Literature (other than comics)'), ('app', 'Apparel (shirts, hoodies, bandanas, etc.)'), ('acc', 'Accessories (harnesses, collars, jewelry, etc)'), ('trg', 'Traditional Games (board games, card games, etc)'), ('vid', 'Video Games (games, consoles, accessories, etc.)'), ('scu', 'Sculptures (figurines, 3D Printed models, etc.)'), ('oth', 'Other (Unique Items or Services)')], help_text='What will you primarially be selling?', max_length=5)),
                ('description', models.TextField(blank=True, help_text='Tell us about your business.', null=True)),
                ('near_to', models.CharField(blank=True, help_text='If there is anyone who you would like your table placed next to or close to, please list them here. If they list you on their application form as well, we will do our best to put you together. Furrydelphia cannot guarantee these preferences will be met, but we will certainly try! Make sure anyone that you list in your application, lists you on their application as well!', max_length=500, null=True, verbose_name='Preferred Neighbors')),
                ('far_from', models.CharField(blank=True, help_text="If there is anyone you are feuding with who you would like your table placed far away from, please list them here. You don't have to tell us why, just list their names. Furrydelphia cannot guarantee these preferences will be met, but we will certainly try!", max_length=500, null=True, verbose_name='Bad Neighbors')),
                ('vegan_opt', models.BooleanField(default=False, verbose_name='Vegan?')),
                ('vegetarian_opt', models.BooleanField(default=False, verbose_name='Vegetarian?')),
                ('rest_food', models.TextField(blank=True, null=True, verbose_name='Any Dietary Restrictions or Food Allergies we should know about?')),
                ('registration_cert', models.BooleanField(help_text='I understand that if I am selected I will have 30 days to Register for Furrydelphia and Pay all Dues or my Acceptance will be Revoked.')),
                ('license_cert', models.BooleanField(help_text='I understand that if I am selected I will have 60 days to apply for a PA Tax License or my Acceptance will be Revoked.')),
                ('website', models.CharField(help_text='This is required, as we need to see what kind of work you will be selling. This can be anything from a professional website to a DeviantArt or FurAffinity Account.', max_length=500)),
                ('terms_cert', models.BooleanField(help_text='I understand and agree to the Furrydelphia Marketplace Terms & Conditions.')),
                ('decided', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('secondary', 'Application Submitted - Not Reviewed'), ('primary', 'Dealer Confirmed, all requirements satisfied'), ('warning', 'Application Submitted - Need Information'), ('danger', 'Application Declined'), ('info condition', 'Application Archived'), ('info', 'Application Waitlisted'), ('success', 'Application Approved'), ('warning condition', 'Application Originally Approved - Waitlisted due to Capacity'), ('warning delinquent', 'Action Required - Delinquent in Deadlines'), ('success hello', 'Checked In')], default='secondary', max_length=100)),
                ('status_sendalong_notes', models.TextField(blank=True, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('open', models.BooleanField(default=False, help_text='If checked, your map icon will be marked green as Open for Commissions.', verbose_name='Open For Commissions?')),
                ('paid', models.BooleanField(default=False)),
                ('registered', models.BooleanField(default=False)),
                ('license_verified', models.BooleanField(default=False)),
                ('contract_signed', models.BooleanField(default=False)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('can_manage_assistants', models.BooleanField(default=False)),
                ('badge_name', models.CharField(blank=True, help_text='Enter your badge name. For approved Dealers.', max_length=20, null=True)),
                ('no_mail', models.BooleanField(default=False, help_text='Does not send any e-mail to this dealer. Note, this will automatically set itself to True if the application is Rejected.')),
                ('registration_invoice', models.CharField(blank=True, max_length=100, null=True)),
                ('matchEmail', models.CharField(blank=True, max_length=100, null=True)),
                ('hotelReservationLink', models.CharField(blank=True, max_length=300, null=True)),
                ('freebiesLeft', models.IntegerField(default=3)),
                ('conDescription', models.CharField(blank=True, help_text='This description will show up under your name in the Marketplace App! We recommend you use this space to talk about commissions, what you sell, etc, and change it based on your preferences during the convention to keep attendees up to date!', max_length=250, null=True, verbose_name='Map and List Description')),
                ('showContact', models.BooleanField(default=False, help_text='Show your contact e-mail to Attendees in the Marketplace App.', verbose_name='Show E-mail?')),
                ('showWebsite', models.BooleanField(default=False, help_text='Show your portfolio website to Attendees in the Marketplace App.', verbose_name='Show Website?')),
                ('showSocialMedia', models.BooleanField(default=False, help_text='Show your social media contacts to Attendees in the Marketplace App.', verbose_name='Show Social Media?')),
                ('atconTwitter', models.CharField(blank=True, help_text='Write your twitter handle (e.g. @furrydelphia), do not include https://twitter.com/. If you put nothing here, it will be hidden from your page.', max_length=20, null=True, verbose_name='Twitter')),
                ('atconFacebook', models.CharField(blank=True, help_text='Display your facebook page. If you put nothing here, it will be hidden from your page.', max_length=500, null=True, verbose_name='Facebook')),
                ('atconFurAffinity', models.CharField(blank=True, help_text='Display your FurAffinity page (e.g. https://furaffinity.net/user/furrydelphia). If you put nothing here, it will be hidden from your page.', max_length=500, null=True, verbose_name='FurAffinity')),
                ('atconInstagram', models.CharField(blank=True, help_text='Display your Instagram page (e.g. https://instagram.com/furrydelphia) If you put nothing here, it will be hidden from your page.', max_length=500, null=True, verbose_name='Instagram')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.event')),
            ],
            options={
                'ordering': ('table_size',),
            },
        ),
        migrations.CreateModel(
            name='TableSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('units', models.IntegerField(default=1, help_text='1 unit = 0.5 tables')),
                ('booth', models.BooleanField(default=False, help_text='check if booth. Unit = 1')),
                ('price', models.CharField(max_length=20)),
                ('assistant_num', models.IntegerField(default=0)),
                ('form_hide', models.BooleanField(default=False, help_text='Hide in the Dealers Application')),
            ],
        ),
        migrations.CreateModel(
            name='TableDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coords', models.CharField(blank=True, help_text='poly imagemap coords, example: x1,y1,x2,y2,x3,y3,...', max_length=500, null=True)),
                ('designation', models.CharField(blank=True, max_length=50, null=True)),
                ('polygons', models.JSONField(blank=True, default=list, null=True)),
                ('map_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.location')),
            ],
        ),
        migrations.CreateModel(
            name='TableAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.dealer')),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.tabledefinition')),
            ],
        ),
        migrations.CreateModel(
            name='DealerAssistant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False)),
                ('first_name', models.CharField(help_text='Must match name on ID', max_length=100)),
                ('last_name', models.CharField(help_text='Must match name on ID', max_length=50)),
                ('badge_name', models.CharField(help_text='Name for Assistants Badge', max_length=100)),
                ('phone', models.CharField(help_text='This information will be used in case of an emergency.', max_length=50, verbose_name='Phone Number')),
                ('vegan_opt', models.BooleanField(default=False, verbose_name='Vegan?')),
                ('vegetarian_opt', models.BooleanField(default=False, verbose_name='Vegetarian?')),
                ('rest_food', models.TextField(blank=True, null=True, verbose_name='Any Dietary Restrictions or Food Allergies we should know about?')),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='marketplace.dealer')),
            ],
        ),
        migrations.AddField(
            model_name='dealer',
            name='table_size',
            field=models.ForeignKey(help_text='Select the size of table you would like to have.', on_delete=django.db.models.deletion.CASCADE, to='marketplace.tablesize'),
        ),
        migrations.CreateModel(
            name='ArtistAlley',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_rules', models.BooleanField(blank=True, default=False, null=True, verbose_name='Please indicate if you have read and agree to the Artist Alley Rules.')),
                ('first_name', models.CharField(max_length=50, verbose_name='Legal First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Legal Last Name')),
                ('email', models.EmailField(max_length=50)),
                ('phone_number', models.CharField(help_text='Furrydelphia will only contact you via phone in the event of an emergency.', max_length=11)),
                ('website', models.CharField(help_text='Where can we see a gallery of examples of your work?', max_length=200)),
                ('table_name', models.CharField(help_text='Example: "Mr. Ardvark\'s Awesome Art"', max_length=180)),
                ('selling', multiselectfield.db.fields.MultiSelectField(choices=[('traditional-art', 'Traitional Art'), ('digital-art', 'Digital Art'), ('fursuit-stuff', 'Fursuit Stuff'), ('books-comics', 'Books/Comics'), ('plushies', 'Plushies'), ('jewelry', 'Jewelry'), ('shirts-clothes', 'Shirts/Clothes'), ('accessories', 'Accessories')], help_text='Must Select At Least One', max_length=200, verbose_name='What Will You Be Selling?')),
                ('availability', multiselectfield.db.fields.MultiSelectField(choices=[('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], help_text='Must Select At Least One. You will only receive one day unless we are underbooked.', max_length=200, verbose_name='What Days Will you Be Available?')),
                ('waitlisted', models.BooleanField(blank=True, default=False, help_text='Individuals on the waitlist are encouraged to bring art supplies and other Artist Alley necessities with them to the con. You never know when someone is going to cancel or be a no-show!', null=True, verbose_name="If you don't win, would you like to be waitlisted?")),
                ('assigned_day', models.CharField(blank=True, choices=[('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=100, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.event')),
            ],
        ),
    ]
