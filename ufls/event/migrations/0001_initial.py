# Generated by Django 4.2.4 on 2023-11-21 23:11

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('community', '0011_alter_communitysidebarmenu_module'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('timeLastSync', models.DateTimeField(blank=True, null=True)),
                ('isSecAccessEnabled', models.BooleanField(default=False, help_text='Enables the PocketSec application to be used by PSafe')),
                ('uniqueBadgeNumbers', models.IntegerField(default=1)),
                ('uniqueBadgeNumbersCard', models.IntegerField(default=100)),
                ('banList', models.TextField(blank=True, help_text='Enter a First/Last name, or known Con Badge Name. One entry per line. Security will be notified if this name is detected.', null=True)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('regOpen', models.DateTimeField(default=datetime.datetime.now)),
                ('regClose', models.DateTimeField(default=datetime.datetime.now)),
                ('regEditOpen', models.DateTimeField(default=datetime.datetime.now)),
                ('regEditClose', models.DateTimeField(default=datetime.datetime.now)),
                ('dealersOpen', models.DateTimeField(default=datetime.datetime.now)),
                ('dealersClose', models.DateTimeField(default=datetime.datetime.now)),
                ('aaOpen', models.DateTimeField(default=datetime.datetime.now)),
                ('aaClose', models.DateTimeField(default=datetime.datetime.now)),
                ('eventsOpen', models.DateTimeField(default=datetime.datetime.now)),
                ('eventsClose', models.DateTimeField(default=datetime.datetime.now)),
                ('eventAppCode', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ufls_event_event',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('space_name', models.CharField(help_text='Name in physical location', max_length=100)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.event')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('data', models.JSONField(default=dict)),
                ('paid', models.BooleanField(default=False)),
                ('invoice_type', models.CharField(choices=[('reg', 'Registration Invoice'), ('table', 'Table Invoice'), ('general', 'General Invoice')], default='general', max_length=20)),
                ('description', models.CharField(max_length=50)),
                ('square_code', models.CharField(blank=True, max_length=100, null=True)),
                ('amount_collected', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('date_paid', models.DateTimeField(blank=True, null=True)),
                ('date_due', models.DateTimeField(blank=True, null=True)),
                ('reference_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True)),
                ('checkout_id', models.CharField(blank=True, max_length=250, null=True)),
                ('idempotency_key', models.UUIDField(default=uuid.uuid4)),
                ('debug_result_data', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventCommunityMapping',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.community', verbose_name='Community')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.event', verbose_name='Event')),
            ],
            options={
                'db_table': 'ufls_event_event_community_mapping',
                'unique_together': {('event', 'community')},
            },
        ),
    ]
