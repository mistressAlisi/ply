# Generated by Django 4.2.4 on 2023-08-15 20:52

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Friend_ExpLvl_View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend1_id', models.UUIDField(verbose_name='Friend 1 UUID')),
                ('approved', models.DateTimeField(null=True, verbose_name='Approved?')),
                ('approved_flag', models.BooleanField(default=False, verbose_name='Approved FLAG')),
                ('friend2_id', models.UUIDField(verbose_name='Friend 2 UUID')),
                ('profile_id', models.CharField(max_length=200, verbose_name='Profile ID')),
                ('updated', models.DateTimeField(verbose_name='Friendship Updated')),
                ('age', models.IntegerField(verbose_name='Profile Age')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('class_name', models.CharField(max_length=200, verbose_name='Class Name')),
                ('status', models.CharField(max_length=200, verbose_name='Status')),
                ('species', models.CharField(max_length=200, verbose_name='Species')),
                ('introduction', models.TextField(verbose_name='Profile Intro')),
                ('slug', models.TextField(verbose_name='Slugified Name')),
                ('pronouns', models.TextField(max_length=200, verbose_name='Pronouns')),
                ('gender', models.TextField(max_length=200, verbose_name='Gender')),
                ('avatar', models.TextField(blank=True, null=True, verbose_name='Avatar URL')),
                ('level_id', models.UUIDField(verbose_name='Level UUID')),
                ('classtype_id', models.UUIDField(verbose_name='Classtype UUID')),
                ('community_id', models.UUIDField(verbose_name='Community UUID')),
                ('expr', models.IntegerField(verbose_name='Experience Points')),
                ('current_level', models.IntegerField(verbose_name='Current Level')),
            ],
            options={
                'db_table': 'community_friend_explvl_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfilePerCoummunityView',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('community_uuid', models.UUIDField(verbose_name='Community UUID')),
                ('profile_creator', models.IntegerField(default=0, verbose_name='Owner ID')),
                ('joined', models.DateTimeField(auto_now_add=True, verbose_name='Profile Joined')),
                ('community_name', models.TextField(verbose_name='Community Name')),
                ('profile_created', models.DateTimeField(auto_now_add=True, verbose_name='Profile Created')),
                ('profile_updated', models.DateTimeField(auto_now_add=True, verbose_name='Profile Updated')),
                ('last_seen', models.DateTimeField(auto_now_add=True, verbose_name='Profile Last Seen Online')),
                ('age', models.TextField(blank=True, default=1, verbose_name='Current Age')),
                ('name', models.TextField(verbose_name='Name')),
                ('status', models.TextField(blank=True, default='CITIZEN', verbose_name='status')),
                ('species', models.TextField(default='Sentient', verbose_name='Species')),
                ('introduction', models.TextField(verbose_name='Profile Intro')),
                ('level', models.TextField(default=1, verbose_name='Current Level')),
                ('max_HP', models.TextField(default=10, verbose_name='Max HP')),
                ('HP', models.TextField(default=10, verbose_name='Current HP')),
                ('max_MP', models.TextField(default=6, verbose_name='Max MP')),
                ('STUN', models.TextField(default=10, verbose_name='Current STUN')),
                ('max_STUN', models.TextField(default=6, verbose_name='Max STUN')),
                ('SHIELD', models.TextField(default=10, verbose_name='Current SHIELD')),
                ('max_SHIELD', models.TextField(default=6, verbose_name='Max SHIELD')),
                ('MP', models.TextField(default=6, verbose_name='Current MP')),
                ('max_STA', models.TextField(default=10, verbose_name='Max STA')),
                ('STA', models.TextField(default=10, verbose_name='Current STA')),
                ('slug', models.TextField(verbose_name='Slugified Name')),
                ('pronouns', models.TextField(max_length=200, verbose_name='Pronouns')),
                ('gender', models.TextField(max_length=200, verbose_name='Gender')),
                ('avatar', models.TextField(blank=True, null=True, verbose_name='Avatar URL')),
                ('posts', models.IntegerField(default=0, verbose_name='Post Count')),
                ('views', models.IntegerField(default=0, verbose_name='Post Count')),
                ('nodes', models.IntegerField(default=0, verbose_name='Node Count')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked FLAG')),
                ('frozen', models.BooleanField(default=False, verbose_name='Frozen FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
            ],
            options={
                'db_table': 'community_profileper_community_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hash', models.TextField(max_length=200, verbose_name='Community Hash')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Profile Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Profile Updated')),
                ('name', models.TextField(verbose_name='Name')),
                ('action_call_cover', models.TextField(verbose_name='Action Call for Cover page')),
                ('introduction', models.TextField(verbose_name='Introduction')),
                ('tagline', models.TextField(null=True, verbose_name='Tagline')),
                ('avatar', models.TextField(null=True, verbose_name='Avatar')),
                ('posts', models.IntegerField(default=0, verbose_name='Post Count')),
                ('profile', models.IntegerField(default=0, verbose_name='Profile Count')),
                ('group', models.IntegerField(default=0, verbose_name='Group Count')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked FLAG')),
                ('frozen', models.BooleanField(default=False, verbose_name='Frozen FLAG')),
                ('restricted', models.BooleanField(default=False, verbose_name='Restricted Join Mode FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
            ],
            options={
                'db_table': 'communities_community_community',
            },
        ),
        migrations.CreateModel(
            name='CommunityAdmins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(verbose_name='Joined')),
                ('active', models.BooleanField(default=True, verbose_name='Active FLAG')),
            ],
            options={
                'db_table': 'communities_community_community_admins',
            },
        ),
        migrations.CreateModel(
            name='CommunityGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(verbose_name='Joined')),
            ],
            options={
                'db_table': 'communities_community_community_group',
            },
        ),
        migrations.CreateModel(
            name='CommunityProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(verbose_name='Joined')),
            ],
            options={
                'db_table': 'communities_community_profile',
            },
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Relationship Created')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('hidden', models.BooleanField(default=False, verbose_name='Hidden FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
            ],
            options={
                'db_table': 'communities_community_follower',
            },
        ),
        migrations.CreateModel(
            name='VHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='VHost Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='VHost Updated')),
                ('hostname', models.TextField(max_length=200, null=True, verbose_name='VHost Hostname')),
                ('ipaddr', models.GenericIPAddressField(null=True, verbose_name='VHost IP address')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked FLAG')),
                ('frozen', models.BooleanField(default=False, verbose_name='Frozen FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
                ('restricted', models.BooleanField(default=False, verbose_name='Restricted Joining FLAG')),
                ('community', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, to='community.community', verbose_name='Community to Apply to VHOST')),
            ],
            options={
                'db_table': 'communities_community_vhost',
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Request Created')),
                ('approved', models.DateTimeField(null=True, verbose_name='Approved?')),
                ('approved_flag', models.BooleanField(default=False, verbose_name='Approved FLAG')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('hidden', models.BooleanField(default=False, verbose_name='Hidden FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.community', verbose_name='Community')),
            ],
            options={
                'db_table': 'communities_community_friend',
            },
        ),
    ]
