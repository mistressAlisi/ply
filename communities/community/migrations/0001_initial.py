# Generated by Django 4.0.2 on 2022-04-26 13:39

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hash', models.TextField(max_length=200, verbose_name='Community Hash')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Profile Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Profile Updated')),
                ('name', models.TextField(verbose_name='Name')),
                ('action_call_cover', models.TextField(verbose_name='Action Call for Cover page')),
                ('introduction', models.TextField(verbose_name='Introduction')),
                ('tagline', models.TextField(null=True, verbose_name='Tagline')),
                ('avatar', models.TextField(null=True, verbose_name='Avatar')),
                ('posts', models.IntegerField(default=0, verbose_name='Post Count')),
                ('profile', models.IntegerField(default=0, verbose_name='Profile Count')),
                ('group', models.IntegerField(default=0, verbose_name='Group Count')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked FLAG')),
                ('frozen', models.BooleanField(default=False, verbose_name='Frozen FLAG')),
                ('restricted', models.BooleanField(default=False, verbose_name='Restricted Join Mode FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityAdmins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(verbose_name='Joined')),
                ('active', models.BooleanField(default=True, verbose_name='Active FLAG')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(verbose_name='Joined')),
            ],
        ),
        migrations.CreateModel(
            name='VHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='VHost Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='VHost Updated')),
                ('hostname', models.TextField(max_length=200, null=True, verbose_name='VHost Hostname')),
                ('ipaddr', models.GenericIPAddressField(null=True, verbose_name='VHost IP address')),
                ('archived', models.BooleanField(default=False, verbose_name='Archived FLAG')),
                ('blocked', models.BooleanField(default=False, verbose_name='Blocked FLAG')),
                ('frozen', models.BooleanField(default=False, verbose_name='Frozen FLAG')),
                ('system', models.BooleanField(default=False, verbose_name='System FLAG')),
                ('restricted', models.BooleanField(default=False, verbose_name='Restricted Joining FLAG')),
                ('community', models.ForeignKey(default=uuid.uuid4, on_delete=django.db.models.deletion.CASCADE, to='community.community', verbose_name='Community to Apply to VHOST')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(verbose_name='Joined')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.community', verbose_name='Community')),
            ],
        ),
    ]
